#1 - The imports
import os
# import sys
import PySimpleGUI as sg

#Icons from encoder
folder_icon = b'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsSAAALEgHS3X78AAABnUlEQVQ4y8WSv2rUQRSFv7vZgJFFsQg2EkWb4AvEJ8hqKVilSmFn3iNvIAp21oIW9haihBRKiqwElMVsIJjNrprsOr/5dyzml3UhEQIWHhjmcpn7zblw4B9lJ8Xag9mlmQb3AJzX3tOX8Tngzg349q7t5xcfzpKGhOFHnjx+9qLTzW8wsmFTL2Gzk7Y2O/k9kCbtwUZbV+Zvo8Md3PALrjoiqsKSR9ljpAJpwOsNtlfXfRvoNU8Arr/NsVo0ry5z4dZN5hoGqEzYDChBOoKwS/vSq0XW3y5NAI/uN1cvLqzQur4MCpBGEEd1PQDfQ74HYR+LfeQOAOYAmgAmbly+dgfid5CHPIKqC74L8RDyGPIYy7+QQjFWa7ICsQ8SpB/IfcJSDVMAJUwJkYDMNOEPIBxA/gnuMyYPijXAI3lMse7FGnIKsIuqrxgRSeXOoYZUCI8pIKW/OHA7kD2YYcpAKgM5ABXk4qSsdJaDOMCsgTIYAlL5TQFTyUIZDmev0N/bnwqnylEBQS45UKnHx/lUlFvA3fo+jwR8ALb47/oNma38cuqiJ9AAAAAASUVORK5CYII='
file_icon = b'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsSAAALEgHS3X78AAABU0lEQVQ4y52TzStEURiHn/ecc6XG54JSdlMkNhYWsiILS0lsJaUsLW2Mv8CfIDtr2VtbY4GUEvmIZnKbZsY977Uwt2HcyW1+dTZvt6fn9557BGB+aaNQKBR2ifkbgWR+cX13ubO1svz++niVTA1ArDHDg91UahHFsMxbKWycYsjze4muTsP64vT43v7hSf/A0FgdjQPQWAmco68nB+T+SFSqNUQgcIbN1bn8Z3RwvL22MAvcu8TACFgrpMVZ4aUYcn77BMDkxGgemAGOHIBXxRjBWZMKoCPA2h6qEUSRR2MF6GxUUMUaIUgBCNTnAcm3H2G5YQfgvccYIXAtDH7FoKq/AaqKlbrBj2trFVXfBPAea4SOIIsBeN9kkCwxsNkAqRWy7+B7Z00G3xVc2wZeMSI4S7sVYkSk5Z/4PyBWROqvox3A28PN2cjUwinQC9QyckKALxj4kv2auK0xAAAAAElFTkSuQmCC'
add_icon = b'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'
closetab_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAq0lEQVRYR+2WTQrCMBBGv6RCNtIb5AT1EPUc9TztOezanq4SyE/RRmZnEzAuKjgPhoEJhMdkQiIeK9gRSXk3WIAFWIAFWCD7FtymCSEECCGo8hnWWpzbFlprqmwQBVLE5W/jOo602zbZIzjWNVBVOChVFBFFOQUP4W8L3OcZWBaEdZpLIuKde+UU2WvYDwOc95CyrFHGGFy6Dqemoco7/CdkARZgARb4dwHgCYvCn8yhglHDAAAAAElFTkSuQmCC'
half_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAGYktHRAD/AP8A/6C9p5MAAALdSURBVFhHvZe7TjJBFICHTaABAxFsKZBXAOIDIMFYGdFAAS2ExGgianwFH4RGEgx4AXoshDeAmgQ6aBRNcM7sAecG7EL+/0sOzJ7bHpaZnTOOGYVYpNVqkXq9Tt7f30mv1yOTyYTpd3Z2SDgcJgcHB+T4+JjE43GmtwQUsIrPz8/Z6ekpFGlLUqkUi13HygLy+bw2uR0pFAqYTc/Sv8DlcpHv72+82g6n00mm0yleiRj4vWA8HhOHw7H05vf396Tb7cKTEwR0d3d3LFYGcoF+PmcEaLAAqHRCJyB6rKfZbGpzgMgIGvrYlYBkMolW+0CsnM/j8aDVZFFAsVhUnC8vL9G6OZBDznt1dYVWLODr60txOjo6Yg4yg8Fgls1mZ263m/lZQfckfn5+mI1lgDUrO+g4Ozuz5KdDjkun06ZeZ2w0GszIEwwGFT8Qq7y+vmpjydvbm6A0DIMZeKBa3ocXO9ClKMTCDzWen5/p+I/b21scmQyHQ1Iul/FqO+Tc7N7RaFSo6uPjA+s1gQnH22WxA+TmY2Ox2Iz4/X5BKQPrlrfLYhc+NhAIwN8ibgf8GNC9Wnlk/3Xw+eh8U/eC/42xu7uLQz3QbPwr4N4GdDI8nU4HRyYnJyc42h46CXFkAvc26CrAS5NKpYIjk4eHBxxtz+PjI45M2L3lFxFOSoFMJiP48GIHOZZt2zrDy8sLC+AJhUKKH4hV6EtHG8s+rW4yuVzOkp8OOe78/NzUwwd0r7JDIpFgDjL01Wx7Oz48PFTyQwsALDJcXFwoTtCkbIuu0bm+vkYrVwCga8mg+k2hBxQl39KWbI4cMJenpyf0WE+1WtXmAJFRNLQt1waCwBItlUqzdruN3n+ADh4t+OhiQSC3jFoS4vV6tUk2EZ/Ph1lVlhYAwK/VJbQjNzc3mE3PygIAeqRa2ZItE1jnVg6nto/ntVqNbVj9fp+MRiOm39vbI/v7+yQSidg8nhPyC6eD0H4DBX6oAAAAAElFTkSuQmCC'
halfb_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAGYktHRAD/AP8A/6C9p5MAAADqSURBVFhH7ZbbCoMwDIbTCR4ewdMze3gm0UfSO9c/ZOCmw3Q3IssHITZV85u2Qbd66EIe4i/DBJgAE2ACfhLQdR1VVUXOOba6rqnve5kNI7gVZ1lGy7LI6J00TWmeZxnpCKpAHMe75NA/TRMnx1ySJDKjBBXQ0DQNKrWzLV4gx9q2lcg5agF5nu+Sw7YMw8Cxoigkco56D2CzHfH5+Os+5WtvdAx9WeXqO+M4si/Lkr0KLIGGkE3o+4REzlELAP6IHQrwX75GUcRjfxw5puVejQggAVrxdp3RltGKQ5MD+ys2ASbABPy7AKIn8jfhLSwsXXwAAAAASUVORK5CYII='
heart_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7EAAAOxAGVKw4bAAADf0lEQVRYR+2WW0hUURSG/7k4o2M6XXW0VHCUwhrLLnSnrKDQ1IJ6KKgeooiKLmJF0FtBEBYRQdRb0AV6NLpQYmWZXSwkjahMMq00zcxxnPtMe63ZmYM6zoxmL30PM3v95+yz/r332etshVeAf4hS/v8z/hsY8B2oP1uMljs3YKl7B1e3BZoxY6GfMRuJ6zYgIXetvMufltvX0XT1In5UPYGrywyFWo2YKVNhyF2D1J2F8i5/+hhounYJtQd2QR2rhyoyEgqVWtylALweeJxOuLu6+NqCmw+hnRDHfZw/2lGRsxjO9jaoRsVAGaGBQqkEPdrrcsFts4p+ZphOX0BiwXru8xs/Ax/OnEDdqePQJiSKnCLpAJAR+7dmZD9/y/G9OZOhjTOIxBEc94dXDMD29QvSi47AuLtIqr0MdFRXoTIvG7pJyb4RD4LX7RaT4uE2jVahUnE7MF50N37Cghvl0GdmsdJj4P68DH6gUqxbsPQ2ECwesSRkdmnla465Z+frGjjaWkNKTvDIQ0hOUA5Haws639T6Yvppe3AXKp2OhZFAFaVD2/1SbrMBq1gXhTKYNRweaGdZmz5xmw3QfhUbhoWRgHIpaXsL2EC0MV3sVzcLIwHVBspJsIH4lavhtphZGAmoSsavyuM2G4hMmIjYadPhcdhZ/JtQDn3mTGjjDRz31AH7txaUzTQiKiklYBUcCpTK2tiAZdX10I73lXGeAUIbF4+s85dg+9wolWFGJLd9bkLWhSs9yYkeAwR9tTKOFnPNHm5szV+QcawYhpx8qfjwM0Akb9mOtH2HeEmGC/pwpe0/jOTN26Tyhz4GCOPeQ0jatBX2761SCR+7KPFJm7fDuOegVPzpcx7oTU3hDjTfKuHDSDg4xDnBkFMA08lzUulLQAPEy20b0f64HBH60VIJDufPDoxbuES8dJel0j+DGiCebciDufYV1DExUgmMy9yJWNMMzLlSIpWBCcoAUZmfje6Gj1BHR0ulf1yWLuhSUjG/pEwqgQnaAPFoxVw4xItJn9P+cFu7oRk3AYtKn0plcEIyQDxYaOJDpkobKRUfbrtNHGKjsKSiRirBEbIBomxWOpdrpUbDscfh4DK77MV7jkMhLANEqSmZR0x4xIwsr/EdMEIlbAMeux2l05LEE4AVtY1iNrTySmiEbYCw1NOUKxCdmuYTwmBIBoYO8Au8iGNi6rW9fwAAAABJRU5ErkJggg=='
question_icon = b'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'
star_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAcBSURBVFhHlVdJbxxFFP56tp7VM56JdzvYjgixo0AEAsRyCnBhERISQoDYxAlxQogDh3DjDyDghEAKkZBYJcQVCYFEIjCLgBg7ix3bJGN7loxn757uab5X0z2xYws8T36urq7q93313qtXNZpDQY8inzhtB5aRhVlbRDRzAprWpvrcGfuX3r+gOG0b9YYDf+FVxH2fo7I5h7bdBmm5M3oQ8UAv0m63nWaj6RQW3mIvr95VF152qpUax2zV70V69wDd36jXENMbQGMB2DqF2PAjaObPwqYXepUeCTgwTROtK+9DH3+JBP4GbA2IHkOo8gWMpqHyoxfpiQDdr1afiNSB+nny8QsneuFHJEbuRSP/E71gdSbvU/ZNQFYmqzfXPkR47EGufpmrN6nNjoanoJe+hmGYnLv/UPRAoI1ms4mEngeqjD290QVvc9XlXxE/cIhe+J1esN2v/l/+k8D2eIrN1srHiAzMAs2N6+CWq7YBLTyCUJ650LJVZPazLVUh8nA05pOIdFlnVCvvzGYLlStnEa9+iWh/hIMyK0AV/pIH8qH0CWkZ2KhOIH74KURi8Y4NqojM9p4FVKNxjdvake9Nky4u0rXlRWjGGnzOFk2XubB1REIOAsmbiJFk7FdpJUQLLrhSeXY1mOIYi1Lpb9RKRfgjQ7C0GHyBNCx9BOi7GcHBO6CHw4qM1tjKOubPL0KPxqD3DXJLUf1hrtJNMIe+bxvUFvs1YhB8B7D7rAhRZTX+GLWPGu2QlXEp0/QO6v/AKl5Gg+ocew1afnXOifz5CqJTt3N1TDCHQOI4+aBb22lUxUfA6GrNBdXE7dJSZUt6fSEhvhdl2VYq4C2qxYSNJGFfuYCNIZ4h1/IrztovH2Fs/RMkZu5BMMA9bla5GAESIwLOtuMwVylqxUQQEBHJC4fGJVslqaQqyk5R72WcD/SGEzuI6vzPWGXCJu4/yRDUis76yq8oLH2L6cKn0A/ezUTTudUYax9bn7hVDEu2cwWOhIYqnpL9rrKVpBSRYEfF7Rpbf4J9cT3n0pYZHIexcAarfVPA7AsYGz/KJLQtp17ZQO7qPPJL3+Nw4RQCo3fwiGXCFX8hgLiQBCQEot6Ku24WAm4rZBQhd+UWiQqhUAxG7E44Sz/icuo4nJlnMTJ8M+L9E51t2CZAvbyJfPYccstncDj7HsKZCej9XEH9KoEZVxEB8qQL7D4rV29vqTLG+mDp07CXf8LS1LPQDj2OkdEjiBHc79c7BDiNC22hUckhl53H5vJZzGTfQXR4Gn6N+SAe8GIv4oFvf/YAd7RyRwijnd/EwviT8E8/TPBZgo91wKUOeAREGA6SYDhIYoOMZ7PvIjGYdglQujMp8uyBb39WwFTXE06lhPmR5wn+AIaHjyCRPgh/gLnlyg4CIjY90ayKJ87hysIPuK/+AaDH3VFXvE8ERLVufxuwesf6cT78EKyZJzA2ehTx1AR8wRB9ed2b3kbvit8fRCQ+gPTgDPqjLLuyLNlSoparNt9Z8l5ary9j7lxvjGdCMhxAZvAwYqlx+IN0+/ZQUnYREPGxBvjDCURbm50ViUHPaBdcgF3w7e0OEj6ESxcRiKTodqmIu2VPAnKKWcyHUHlJGemCdj3gAnSJeM83KKujc3WObo+q/NpL9ibAGMqZHixdoAc4xQP1gLpgNxDxWm+MJSTBAlYprtAm+3vIngRk+5hWA3p5hUYYMw+kC0TLCkBaVjl1OXHfq3nS77R+Jp1z9S9Gkn3+3Si7CXBSmwQamxcR11yDyjhdaLIUS5llWbWLZaxtxTBvHmKtKnKn8r3sFiHU4lyPBA8nbZ0ESFKK542yi4BMsll+HX7kk8RhJsOk0egw7Pg0mjkDl5dqmJt4Gtl7Xkf9tmfw+11vYHEriq3FDRjBSSA1TUs8zFpybvgQvHYJJs8PbY8w7KoDkvb1Zg2Fb97ExMopHp0ZXiImYa2vIFfYwj8zj8J3y4NIxzPc16PwsUzXWLxKlU164k8MzH2CEeMaQpOzCDg8wHLnkeOFNfDqd0hGU2qHbZddBCRZyrUizNNPYaBxjrfdIRRW17A8eQLtWx9GJjGIVHoS0b4hBPUECfjQatXRqG6iXFxDkWQal85i/LfPMOZrwXfgAMqXF2G8vY50NM06IwSux2I3AZbdEs+E+unnkFw7g4sTJ2Acfwz9LE6p9E2IJ8cQ4kpkX4sZ3uzECGNsMUWqPNSy2CqsoFjLwVz4HlN/fAWN9wvn5DkMsBJKUv43AXqgRiP53CWUyxuIECjZP45YchS6KihuNVM3pOuijNCUw6ub0SijXllH+doaKo0Sr3sZDGUmkchM7cMDJGDzHDfqRdUG9ZhytVrxPn5+izGN/2zeKS2jxp9rZXXq6dF+BHkv2GkD+Bcmd3tp7GBv/wAAAABJRU5ErkJggg=='
warning_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAU9SURBVFhHxVZbaBxVGP5mZu/J7sbsNvekSWxTUxpI0IggCj5VFIoFoVJFBaH44EMffDAP+uSD+OCbgpciarVRS0utFAvxAuKltJogSYppjE1za5psN3ud2Tlz8T8zk2ST7C1VzAd/lsz5z3e+c/7v/DOCScAOQnR+dwx3fALq7TlkZoYhSBICLb3w1DQ6I9vDHQlYufo9VkZfQnCPG6YhIPWngtr7PkC460Eno3JsuwQro+egXHsB7Qe7EJEaEfU0oOPQfqRHjiAxfsHJqhzbFrDw1ZNo2NcJNp5CLsuQy6hgY0k09uzD/JnDTlbl2JaAmQuvoe2BTpiyCMPQAZOHAUPXIDIXmu9txvzQG052ZahYgJZNQZv9ElXNbcilc/BKJrxBirD9y9IKQp13Q574CHpOdmaVR8UCFi4eR10ngxFXaXEdP42p6DmaQvRgEr3PpiCBTiOhUo6Mm0MDzqzyqEiAJmfApk+hKtIENatCcBl4/2sVmgG014uIp4Ef/9CAnIpgfSuZ9D3ofLACVCRg5uwxdPST8RI5QKedUs05v0uyxz0uYClue4IlGNr7dmPmzDF7sAzKCkhNX4YUO0e7DsJQNAiWAJ17jyBYORAECAa1E3puKAySLwwp/g3k5ev2eAmUFbB4/hk07W+BGlNgaLQAF6BqaAyT+50Wxn/DfnrOaJxyWCyHhk4/ZgcftxNKoKSAzMJV+LQJOuoq6Ix2T1fPPgGDjt3Eag/lvyEvv440Tjka5brdIXhz48jenLCTiqCoAE46+8VhtPR0Q41nyYlkstVQGarIiM760E0Bu2tUun5sLUe9nUVbXzduDB5ayyuEogJiv59EJLgIKCbt3t6ZbUD7BII+EuAw8xIE3eQLes7Hea5OpYBsIkocseFTdmIBFBWQ+OE4otEQsgmFiDWq7XqAdtocYtbOuQjyIALVOWjkjdUcPofPjUaDSBJXMRQUsPjbp4j4YzBUumeGYdU9P0yKoJcMR4tzAUEf/WFb8/hcg1p0rfeWxVkIWwQoy1NID72ImsYWq+WCDLWh/nx3VJKAqFtGpHWxN8pPZWsen8s5OBfn5NybsUVA7PK72BVKQ0vxY6SdbKi9Hby+9QEV1V5q0SkXehq40K15fC7n4Fy7QhnELr3trLKODR8kum5iakDE3t46pJN0pEUdQjV3Gxi75UVcltDXpEASTCqJ05g2gTet6rCEyZFFtL+uwuV2OyObBPz1+XNoT3wGXQiBMdMyVzH46G0oBuiYuUgmQJFda41pM/gKbrcAyUzh79AR7HnqE2ckrwSpmSvwTw9CkvxgWSLmx8ivUoHwgeG7ST+637wHkVcP4LETHZYvRHJ+oXzOxTklyYfg3Glq7784q+YLGPkQNZJKXzgkl14qlouLhChoODFca51Qx10Mo0t+XLxWBQ8c4ZvC4iJOzl0jKVj59S1n1TwByZ/fgc/lttqoZbxSQYRhjwZZkyhEKLqIOr9KQ1TsQvkUnJNzuwQvkpdOO6vm3wLqovQ6p2TqcERUKnIK8HL/HI52L+GR1gReuX8O/fVJ6tD0fiiQvxqcW1XJ3PaKFtZMOH3yEIKT5+Hzk5msodJwi/QpRu8DYiBiAVkmlZ3HdyuTFzJdT6Dt6bNrzyxEHhrAEl1ngRoKN5NIakuFrpnIKrQwfaBmc7SnAjkbgjg59zKddO3D659sG66hHJvCjY8fRSB1HVKGMv8r0Ap6lYRsdSvanv8W/kinM7BJAAf/N7MwApacd578e5hkQE+oGYGGAxBd1D7zsEXA/431W7AjAP4Bo+FyEfbC5y4AAAAASUVORK5CYII='
watched_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAARUSURBVFhH5ZZ/TNRlHMffdx2m5QHH3XHAgQdHy0LSslqBy9WQnG5upcyyllsE/RizMqmYBkV4xwhC13IEi9D8IzSVdljRWNPZVkOdcmwIJYn81qX8uh/f+/G97/U83/ue3HF3gOLNP3xtz4Dn89zen8/7eT6fQ+Qm4A4iFn7eMe6OBCxWs/BbIOFNgLyufH06tu6Ro76pWNj0J3wJEPEPqrKx9Olk5OZux7mRI2g49qkQnCJsCeSWpUG1QgyFVI3ermGsejYLf4404KBBJ5zwEJY2LKxcC3m6CypFCswTDEQiUqlYhCj5YpxobcGahwuwZX0hf/a2O/BGWToiH7JDHpmE8esmcBwLl4uFw+HEfyPjeOa5LBiMejSfrOXP31YHPq5ej4XJk0iI1cJEK59eHlGSSCRw38PCeOoCGko7QydwbWwYClmC8Nfs5O1eDtWDi4jtWljNRFzY90UkFoNhzDh/5gz2FZ6FOjY1+BXs+b4An9Rno/lEnbAzM0V7N0CujYBSlgTTGLGddcE1bXEcR67CiXNtbdi1tZEXpwQ48F7lajD39+PxJ55Eyy8GvJpRgZy17wvRQPLLlkO6xI04ZerMldss6Gw3oq6oA3EKjRCZ9gh1da+BWdQP7ZJlGP53DJkZ2Th6WofGli+FE/7s/OoF3JfIQhlDKzd7Knf5L1o5y9rReb4dxa//6CdOueHAtopVRLwPmqRlsExaaYhfUtm9OH32JLZk6PHyOk/rUPJ3P4oIpRkqOblzC608sHbaeozNip4L3agv7kJsTKIQmUJMMyz95iVYFvYiIS4VE6OTYEnb8It1kFYy47EVmWhqKydOVPEfKvk6B4gehSJaTV67iVQqnPdZHOeCw2lDT1c3PstrCipOEV0a6HAX1WZBk6yF08HSTgnELcJi2QJ0dbcjJeopjIr/gSpGA8ZiFw74Iyb9x9gtGOi9jO9K/g4pThGnJD6CNStz0X3RCM5NX6pncPgulrzeiesWPKBNg3XBABky8TCNW4hDgWfpvdudDPqIeOmbhhnFKTfewL5D2/G78QBUsfHEvqA+8IOEn6vBfSIhEewOBleHRnCgtIe0pVqIhMavDWsO78BPf1VDo15K3CDbIfIIBs2L5Zy4MnQFurebsTItS4jMTMAcqDlciJ/baqBQqsCH5pCEt/Lxa2M4+Pmlm5qgAZPwnc1V2JBZgMv9veC8/TxtqvkuesZmt/Li5QW/3pQ4JcABL7VHP8KxU9WQRSv4LggK2aaVW00MftD1ISYqTgjMnZBfx29t+gIbV+9A/9BVuPivVFKxz6J9TsWZSQYV2367JXFKSAe8fNu0E42t5ZBKo6emnVC5086iUT9IxFWe/VsgpANe8l7U45Xnd2GQ/DPBO0Eqp3futLlQ+W7rvMQpszrgZb+hBA3HyxAhIVm7JThUMQhZ5PzEeWgCc+VI6153zofx7o6Lfwg782fODoSLWd9AuLnbEwD+B2XXtlhyKyJsAAAAAElFTkSuQmCC'
clean_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAADGSURBVFhH7ZcxDoQgEEVnt4GjaMUp4EZwOE+AUuFppJplWEKia7lgMz/5imDyH9j4AbNCCDjPMwLAEE/ThN57ikag8LuXRnhdV4SRO7+aTuJVH4qUUmCMgZRSnfmvhBCwLAvEGOvMV43IOVe+S09Za1se+Z0vTcdx1FE/XTNOAE+IARiAARiAARiAARiAARjgBCClrKN+umb8FBOtdbffcwqnYrLve53JonqUb4+41EJqqXeLI1zKKdUlghh5ErTzbdtyMuIHsq9mdVwrOl0AAAAASUVORK5CYII='
uncheck_icon = b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAUkSURBVFhHzZVZbFRVGMf/985tO9NWuk43QEjhoR0o2goFA2iEmCgBNOEBuxhiYkjURB9MNJKYaHwQ0ReNkRhMjLKZBgRD0UgsIEs6UDZNaUFQsFNmaKctS6ez3Ln3Hr9z57QwM/cO5QX8JWfm5lvOt5xNYgQeIrL4f2j8/xPw/7IHnc1LMebzCcm9Gev3wUs+fbu/E5IM8D1gR9/eNvbHaoWxXfXsxAvTWbDzsNDYw224LfuxgfU2udjfW78WGmtsN6GvfReC376FhucqEQnpcCo6ujpuwvPVCeRXVQqrZEL+AHpeX4gFywsRUR3IfURB95EAcld8gOrmV4VVMpZL4GvfjRubX0LDs+UYGYhhdFTDaAhofL4IPa81Ysj7u7C8A5dxHbfhtqExDUMDUcxdXIb43jfxz/YtwjKZtA70/7wHg1veQMOycty4GUdcJyOJLxWQo8gocOo4efQ2PJu7qBMVpk/If52CL0Dj0im4FXUgphkTPooDKC7Kwvnjg3Ct+jCtE0kJBH7bh+DG1Zi3og6DN+IwSEPzTGDQcCpAUaGMkx23Mfuj3ab88vtr0Lh8CiVsIKolt3V88oqSLPQe6kXeum/w6Jp1QpqSQGfL06iZdgV6Vh5UjZlVpJLohITiHANnLzhNWX1NFCMxmSq391EcErL0MC72z8CibUeEJiWBsL8fZ15ZiGmzFWTn5oDxki0wO0GtLchP1HorRJXTUtmdaYkUajiK/ks6nvi+C66KKqFJSYAz3HUUvRvWYmatAubINrO3JFVuUTmHd0TSY7jaa6D24zaUzF8sNAnSEuBEBgdwuqUeldOpdS7qhF0S94AH1yIxBPokzP/hHJylbqG5g2XXXGXlZrb+PgY9FoVBu1q/z2H6xCLw/wvUbmyzDM6x7MA4keAgTq19DO5yHYpz8p0Yr3wwqKCx7U84S0qFJh27fWPicpeh7ov9GI6WQY2qlpVaDTWiYkQtx7zP92cMzsmYAEdXo8iTDRTKDEZMn9TgtrkSJROPilnsybgEo3Qs/3q5AbNKdQQ0B6i4SUEXJqro7bg0rKBm61nkV945dqnYdiDY2YGLdBKqC1X4whJiUdpY6uQGt+U+swpi6G2uR9B7SMyajmUHeOUXyHFmXgzXdAU6VW51w2WCz+qgy6pK1nA17IRn5znk33UBjZOWQNDbgSvvrsUMZxjXtKxEcKG7X/jEDurxVEXF1Ug+qje1wb3omYRSkJRAyHcFF1oXoEIeozWnyklmWzl5MZ1eHkJy0AtlY2d2gnRVDg1+Ix+eHaeQN3WG0KYk4G1ZArn7OJjLRcGljJUbcRWscrb5LQUuQ87KNr+tMDtBv3IkAr1uCT1GRxMKImkTVq9/D8PDQFzVwehlM2yGFg5DdRahbtN2c/BvLrOy5YPPxecM0tzV6zeIaAnS9sD1g/vQ804TFDr/kky7KAVDU2FMcePJ9vNwFieu1+hIEJ0r50C+HYSspHeCGRq0bBc8m3aiYtkqIU2Qdgy5wZxPdyAUpC6ocVpnqsAcdLGM0W1YUIrHv9wzEZzDv7lML3CbNtx2wk/VEBoy4PlkW1pwjuUx5Awc2ofut5vgCI2ZW5k/LigtxeL9Pci5K/jdxKgTx1d66CgNUSeoNkpEy8vF3M+2o2L5i8IqBZ6AHdcP/sTa3WAHKsE6FpWwkTPHhMaekdPHTFvuw339v+4SGmsyJsAZONzOvK1LWXjgmpDcG27rbX2KBQ5kDs6xXYIHhe1b8KB4yAkA/wHTdyMftio8dAAAAABJRU5ErkJggg=='


STARTING_PATH = sg.PopupGetFolder('Select Folder', title="Hi-Fi Folder")


#Files and folder making tree
treedata = sg.TreeData()


def add_files_in_folder(parent, dirname):
    files = os.listdir(dirname)
    file_folder_count = 0
    for f in files:
        fullname = os.path.join(dirname, f)
        if os.path.isdir(fullname):            # if it's a folder, add folder and recurse
            treedata.Insert(parent, fullname, f, values=[])
            add_files_in_folder(fullname, fullname)
        else:
            treedata.Insert(parent, fullname, f, values=[])
        file_folder_count += 1
    print(file_folder_count)


add_files_in_folder('', STARTING_PATH)


# 2. The layouts
def make_window(theme):
    sg.theme(theme)
    main_layout = [[sg.Tree(data=treedata, headings=['Status'], auto_size_columns=True, num_rows=20, col0_width=30,
                            key='_TREE_', show_expanded=False,)],
                   [sg.Button('', image_data=add_icon, button_color=(sg.theme_background_color(),
                                                                     sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=closetab_icon, button_color=(sg.theme_background_color(),
                                                                          sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=half_icon, button_color=(sg.theme_background_color(),
                                                                      sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=halfb_icon, button_color=(sg.theme_background_color(),
                                                                       sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=heart_icon, button_color=(sg.theme_background_color(),
                                                                       sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=question_icon, button_color=(sg.theme_background_color(),
                                                                          sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=star_icon, button_color=(sg.theme_background_color(),
                                                                      sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=warning_icon, button_color=(sg.theme_background_color(),
                                                                         sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=watched_icon, button_color=(sg.theme_background_color(),
                                                                         sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=clean_icon, button_color=(sg.theme_background_color(),
                                                                       sg.theme_background_color()), border_width=0),
                    sg.Button('', image_data=uncheck_icon, button_color=(sg.theme_background_color(),
                                                                         sg.theme_background_color()), border_width=0)],
                   [sg.Button('Ok'), sg.Button('Cancel')]]

    theme_layout = [[sg.Text("Select the Theme")],
                    [sg.Listbox(values=sg.theme_list(),
                                size=(20, 12),
                                key='-THEME LISTBOX-',
                                enable_events=True)],
                    [sg.Button("Set Theme")]]

    # 3. Create Window
    layout = [[sg.Text('Hi-Fi Fold', size=(38, 1), justification='center', font=("Helvetica", 16),
                       relief=sg.RELIEF_RIDGE, k='-TEXT HEADING-', enable_events=True)]]
    layout += [[sg.TabGroup([[sg.Tab('Folder &File Browse', main_layout),
                              sg.Tab('Settings', theme_layout)]])]]
    window = sg.Window('Hi-Fi Fold', layout)
    return window


def main():
    # Event Loop
    window = make_window(sg.theme())
    while True:
        event, values = window.Read()
        print(event, values)
        if event in (None, 'Cancel'):
            break
        elif event == "Set Theme":
            print("[LOG] Clicked Set Theme!")
            theme_chosen = values['-THEME LISTBOX-'][0]
            print("[LOG] User Chose Theme: " + str(theme_chosen))
            window.close()
            window = make_window(theme_chosen)
            print(event, ' ', values)
    window.close()
    exit(0)


#
if __name__ == '__main__':
    main()
